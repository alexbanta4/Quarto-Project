(in-microtheory QuartoMt)

;;; Resets an already filled board and returns pieces to starting configurations
(preconditionForMethod
 (and
      (cell 1 1 ?piece1)
      (cell 1 2 ?piece2)
      (cell 1 3 ?piece3)
      (cell 1 4 ?piece4)
      (cell 2 1 ?piece5)
      (cell 2 2 ?piece6)
      (cell 2 3 ?piece7)
      (cell 2 4 ?piece8)
      (cell 3 1 ?piece9)
      (cell 3 2 ?piece10)
      (cell 3 3 ?piece11)
      (cell 3 4 ?piece12)
      (cell 4 1 ?piece13)
      (cell 4 2 ?piece14)
      (cell 4 3 ?piece15)
      (cell 4 4 ?piece16)
      (givenPiece ?piece17)
      (boardWon ?status)
      )
 (methodForAction
  (resetBoard)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (cell 1 1 ?piece1)))
    (doForget
        (ist-Information QuartoMt (cell 1 2 ?piece2)))
    (doForget
        (ist-Information QuartoMt (cell 1 3 ?piece3)))
    (doForget
        (ist-Information QuartoMt (cell 1 4 ?piece4)))
    (doForget
        (ist-Information QuartoMt (cell 2 1 ?piece5)))
    (doForget
        (ist-Information QuartoMt (cell 2 2 ?piece6)))
    (doForget
        (ist-Information QuartoMt (cell 2 3 ?piece7)))
    (doForget
        (ist-Information QuartoMt (cell 2 4 ?piece8)))
    (doForget
        (ist-Information QuartoMt (cell 3 1 ?piece9)))
    (doForget
        (ist-Information QuartoMt (cell 3 2 ?piece10)))
    (doForget
        (ist-Information QuartoMt (cell 3 3 ?piece11)))
    (doForget
        (ist-Information QuartoMt (cell 3 4 ?piece12)))
    (doForget
        (ist-Information QuartoMt (cell 4 1 ?piece13)))
    (doForget
        (ist-Information QuartoMt (cell 4 2 ?piece14)))
    (doForget
        (ist-Information QuartoMt (cell 4 3 ?piece15)))
    (doForget
        (ist-Information QuartoMt (cell 4 4 ?piece16)))
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece17)))
    (doForget
        (ist-Information QuartoMt (boardWon ?status)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell 1 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 1 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 1 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 1 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    (doRecord
        (ist-Information QuartoMt (boardWon False)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece1)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece2)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece3)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece4)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece5)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece6)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece7)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece8)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece9)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece10)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece11)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece12)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece13)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece14)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece15)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece16)))
    ))))

;;; Creates a board and implements starting configuration
(preconditionForMethod
 (and
      (uninferredSentence (cell 1 1 ?piece))
      )
 (methodForAction
  (resetBoard)
  (actionSequence
   (TheList
    (doRecord
        (ist-Information QuartoMt (cell 1 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 1 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 1 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 1 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 2 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 3 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 1 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 2 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 3 Empty)))
    (doRecord
        (ist-Information QuartoMt (cell 4 4 Empty)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    (doRecord
        (ist-Information QuartoMt (boardWon False)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece1)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece2)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece3)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece4)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece5)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece6)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece7)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece8)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece9)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece10)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece11)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece12)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece13)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece14)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece15)))
    (doRecord
        (ist-Information QuartoMt (unplacedPiece piece16)))
    ))))


;;; If the givenPiece wins, place it there
;;; Highest priority place, used by all strategies
(preconditionForMethod
 (and
      (givenPiece ?piece)
      (winningPlace ?x ?y ?piece)
      )
 (methodForAction
  (placePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doForget
        (ist-Information QuartoMt (boardWon False)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
	    (ist-Information QuartoMt (givenPiece Empty)))
    (doRecord
        (ist-Information QuartoMt (boardWon True)))
    ))))

;;; Survivor will arbitrarily place if the givenPiece is a safePiece (No possible win placement)
(preconditionForMethod
 (and
      (playerType Survivor)
      (givenPiece ?piece)
      (safePiece ?piece)
      (cell ?x ?y Empty)
      )
 (methodForAction
  (placePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    ))))

;;; Denier will try to block a row of three pieces that share an attribute
;;; Importantley, this is only done if there is an unplacedPiece that also has that attribute
(preconditionForMethod
 (and
      (playerType Denier)
      (givenPiece ?piece)
      (safePiece ?piece)
      (cell ?x ?y Empty)
      (unplacedPiece ?piece1)
      (winningPlace ?x ?y ?piece1)
      (wingWin)
      )
 (methodForAction
  (placePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    ))))

;;; Denier places piece arbitrarily given there is no three to block
(preconditionForMethod
 (and
      (playerType Denier)
      (givenPiece ?piece)
      (safePiece ?piece)
      (cell ?x ?y Empty)
      (uninferredSentence (wingWin))
      )
 (methodForAction
  (placePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    ))))

;;; Complicator attempts to create rows of three pieces that share attributes
(preconditionForMethod
 (and
      (playerType Complicator)
      (givenPiece ?piece)
      (safePiece ?piece)
      (cell ?x ?y Empty)
      (complexPlace ?x ?y ?piece)
      )
 (methodForAction
  (placePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    ))))

;;; Complicator places arbitrarily if there is no way to create row of three
(preconditionForMethod
 (and
      (playerType Complicator)
      (givenPiece ?piece)
      (safePiece ?piece)
      (cell ?x ?y Empty)
      (simplePiece ?piece)
      )
 (methodForAction
  (placePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    ))))

;;; Lets human player set givenPiece to specific coordinates. Since this is a winning placement it also updates (boardWon)
(preconditionForMethod
 (and
      (givenPiece ?piece)
      (cell ?x ?y Empty)
      (winningPlace ?x ?y ?piece)
      )
 (methodForAction
  (placePieceLocation ?x ?y)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doForget
        (ist-Information QuartoMt (boardWon False)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    (doRecord
        (ist-Information QuartoMt (boardWon True)))
    ))))

;;; Lets human player set givenPiece to specific coordinates.
(preconditionForMethod
 (and
      (givenPiece ?piece)
      (cell ?x ?y Empty)
      (uninferredSentence (winningPlace ?x ?y ?piece))
      )
 (methodForAction
  (placePieceLocation ?x ?y)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece ?piece)))
    (doForget
        (ist-Information QuartoMt (cell ?x ?y Empty)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (cell ?x ?y ?piece)))
    (doRecord
        (ist-Information QuartoMt (givenPiece Empty)))
    ))))

;;; Sets an ungivenPiece and safePiece to be the givenPiece
(preconditionForMethod
 (and
      (givenPiece Empty)
      (unplacedPiece ?piece)
      (safePiece ?piece)
      )
 (methodForAction
  (givePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece Empty)))
    (doForget
        (ist-Information QuartoMt (unplacedPiece ?piece)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (givenPiece ?piece)))
    ))))

;;; Sets an ungivenPiece to be the givenPiece, for when their are no safePieces
(preconditionForMethod
 (and 
      (givenPiece Empty)
      (unplacedPiece ?piece)
      (uninferredSentence (safePiece ?piece1))
      )
 (methodForAction
  (givePiece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece Empty)))
    (doForget
        (ist-Information QuartoMt (unplacedPiece ?piece)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (givenPiece ?piece)))
    ))))

;;; Used by the human player to set the piece to be the givenPiece
(preconditionForMethod
 (and
      (givenPiece Empty)
      (unplacedPiece ?piece)
      )
 (methodForAction
  (givePieceSpec ?piece)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (givenPiece Empty)))
    (doForget
        (ist-Information QuartoMt (unplacedPiece ?piece)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (givenPiece ?piece)))
    ))))

;;; Updates strategy for AI player
(preconditionForMethod
 (and
      (playerType ?type)
      )
 (methodForAction
  (setPlayerType ?newType)
  (actionSequence
   (TheList
    (doForget
        (ist-Information QuartoMt (playerType ?type)))
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (playerType ?newType)))
    ))))
    
;;; Sets strategy for AI player
(preconditionForMethod
 (and
      (uninferredSentence (playerType ?type))
      )
 (methodForAction
  (setPlayerType ?newType)
  (actionSequence
   (TheList
    (doClearWorkingMemory)
    (doRecord
        (ist-Information QuartoMt (playerType ?newType)))
    ))))
